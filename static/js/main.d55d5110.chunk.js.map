{"version":3,"sources":["Components/Button.js","Components/Footer.js","Components/Color-Dot.js","Components/Form.js","Components/Mapbox.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","border","concat","color","hover","bind","assertThisInitialized","isHover","setState","hoverColor","_this2","react_default","a","createElement","className","onMouseEnter","onMouseLeave","style","onClick","text","Component","Footer","href","ColorDot","backgroundColor","Form","location","panel","alpha","hasError","panelFocus","React","createRef","toggleLocation","colorChooser","submitForm","formInput","navigator","geolocation","getCurrentPosition","position","latitude","Math","round","coords","longitude","key","replace","geoFireRef","set","closeForm","err","includes","code","console","log","warn","message","_this3","lib","ref","enableAlpha","onBlur","onChange","Button_Button","es","action","popup","destroyPopupOnHide","popupAlign","points","offset","overflow","adjustX","adjustY","borderColor","Color_Dot_ColorDot","_this4","isActive","getNewLayer","id","type","source","paint","circle-radius","stops","circle-color","circle-opacity","Mapbox","makePoints","mapboxgl","accessToken","map","Map","container","mapContainer","zoom","minZoom","center","window","hash","length","userlocation","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","addControl","getElementsByClassName","remove","firebaseRef","GeoFire","getCenter","corner","getBounds","_ne","distance","lat","lng","query","radius","on","customData","getSource","getLayer","addSource","data","features","geometry","coordinates","addLayer","child","removeLayer","val","updateCriteria","removeSource","off","top","bottom","width","el","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","App","formActive","disableGeolocation","geoFire","toggleForm","hasGeolocation","value","Mapbox_Mapbox","Footer_Footer","Form_Form","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d55d5110.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../Styles/Button.css';\n\nexport default class Button extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      border: `2px solid ${this.props.color}`,\n      color: this.props.color\n    }\n    this.hover = this.hover.bind(this);\n  }\n\n  hover(isHover){\n    if(isHover){\n      this.setState({\n        border: `2px solid ${this.props.hoverColor}`,\n        color: this.props.hoverColor\n      });\n      return\n    }\n    this.setState({\n      border: `2px solid ${this.props.color}`,\n      color: this.props.color\n    });\n  }\n\n  render(){\n\n    return(\n      <div\n      className={`Button ${this.props.className}`}\n      onMouseEnter={()=>this.hover(true)}\n      onMouseLeave={()=>this.hover(false)}\n      style={this.state}\n      onClick={this.props.onClick}>\n        {this.props.text}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../Styles/Footer.css';\n\nexport default class Footer extends Component {\n  render(){\n    return(\n      <footer>\n        <a href=\"https://github.com/josuerojasrojas/Color-Map\">Source</a>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport '../Styles/Color-Dot.css'\n\nexport default class ColorDot extends Component {\n  render(){\n    const style = {\n      backgroundColor: this.props.color\n    }\n    return (\n      <div className='Color-Dot' style={style}>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport '../Styles/Form.css';\nimport Button from './Button';\nimport ColorDot from './Color-Dot';\nimport { Panel } from 'rc-color-picker';\n// trigger is a package used in rc-color-picker\nimport Trigger from 'rc-trigger';\nimport 'rc-color-picker/assets/index.css';\n\n\nexport default class Form extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      location: false,\n      panel: false,\n      color: {color: \"#cf0bff\", alpha: 100},\n      hasError: null\n    }\n    this.panelFocus = React.createRef();\n    this.toggleLocation = this.toggleLocation.bind(this);\n    this.colorChooser = this.colorChooser.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.formInput = this.formInput.bind(this);\n  }\n\n  toggleLocation(){\n    this.setState({ location: !this.state.location });\n  }\n\n  colorChooser(color){\n    this.setState({color: color});\n  }\n\n  submitForm(){\n    const success = (position)=>{\n      // keys might be the same on purpose this is to replace a point that is otherwise going to be directly on top of the other\n      const latitude = Math.round(position.coords.latitude * 10000) / 10000;\n      const longitude = Math.round(position.coords.longitude * 10000) / 10000;\n      const key = `${latitude},${longitude}`.replace(/\\./g, ',');\n      this.props.geoFireRef.set(key, [latitude, longitude], {color: this.state.color.color});\n      this.props.closeForm(false);\n    }\n    const error = (err)=>{\n      if([1,2].includes(err.code)){\n        console.log('cannot get location')\n        this.setState({hasError: err});\n        return\n      }\n      console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  formInput(hasError){\n    const panel = (<Panel\n      ref={this.panelFocus}\n      className={this.state.panel ? 'open' : 'close'}\n      enableAlpha={false}\n      color={this.state.color.color}\n      onBlur={()=>{this.setState({panel: false})}}\n      onChange={this.colorChooser}/>);\n      // TODO: clean this spaghetti code\n    return hasError ? (<div className='error'><a href='http://waziggle.com/BrowserAllow.aspx'><span className='error-code'>ERROR {this.state.hasError.code}</span>: {this.state.hasError.message}</a><Button\n      onClick={this.props.closeForm}\n      text='Cancel'\n      color='rgb(198,0,0)'\n      hoverColor='rgb(98,0,0)'/></div>) : (\n      <div>\n        <Trigger\n          className=\"trigger\"\n          action={['click']}\n          popup={panel}\n          destroyPopupOnHide\n          popupAlign={{\n            points: ['tl', 'tl'],\n            offset: [50, -100],\n            overflow: { adjustX: false, adjustY: true },\n          }}>\n          <div className='input' style={{borderColor: this.state.color.color, color: this.state.color.color}}>\n              <ColorDot color={this.state.color.color}/> Color Chooser\n            </div>\n          </Trigger>\n          <div className='button-wrapper'>\n            <Button\n              onClick={this.submitForm}\n              text='Submit'\n              color='rgb(0,127,0)'\n              hoverColor='rgb(0,80,0)'/>\n            <Button\n              onClick={this.props.closeForm}\n              text='Cancel'\n              color='rgb(198,0,0)'\n              hoverColor='rgb(98,0,0)'/>\n          </div>\n        </div>\n    );\n  }\n\n  render(){\n    return (\n      <div className={`Form-wrapper ${this.props.isActive ? 'active': ''}`}>\n        {this.props.isActive ? (<div className='Form-Shade' onClick={()=>{this.props.closeForm(false)}}></div>) : ''}\n        <div className='Form'>\n          <div className='title'>New Point</div>\n          <div className='input-wrapper'>\n            {this.formInput(this.state.hasError)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport '../Styles/Map.css';\n\n// some helper functions to clean things out\nfunction getNewLayer(key, color) {\n  return (\n    {\n      \"id\": key,\n      \"type\": \"circle\",\n      \"source\": key,\n      \"paint\": {\n        \"circle-radius\": {\n          \"stops\": [\n            [3, 2],\n            [9, 4]\n          ]\n        },\n        \"circle-color\": color,\n        \"circle-opacity\": .4\n      }\n    }\n  );\n}\n\n// initial code from https://blog.mapbox.com/mapbox-gl-js-react-764da6cc074a\nexport default class Mapbox extends Component {\n  constructor(props){\n    super(props);\n    this.makePoints = this.makePoints.bind(this);\n  }\n\n  componentDidMount() {\n    mapboxgl.accessToken = 'pk.eyJ1Ijoid2l0aGNoZWVzZXBscyIsImEiOiJjam9mNmlubTEwMTYwM3BueGNvbW92cXR5In0.aC-cPbUGitfW_4lrx92KSA';\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/withcheesepls/cjog1f02r1ds52so0vdjqibye',\n      zoom: 9,\n      minZoom: 3,\n      center: window.location.hash.length === 0 ? [-73.9395,40.79] : [],\n      hash: true\n    });\n    const userlocation = new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    });\n    this.map.addControl(userlocation);\n    console.log('component', this.mapContainer.getElementsByClassName('mapboxgl-canary'));\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n    // TODO: also remove or stop query\n  }\n\n  makePoints(firebaseRef, geoFireRef, GeoFire){\n    // make sure firebase and geofire are loaded to make the queries\n    if(!firebaseRef || !geoFireRef || !GeoFire || !this.map) return\n\n    // get the points of interest (center and a corner is fine)\n    let center = this.map.getCenter();\n    let corner = this.map.getBounds()._ne;\n    let distance = GeoFire.distance([center.lat, center.lng], [corner.lat, corner.lng]);\n    // make the query\n    const query = geoFireRef.query({\n      center: [center.lat, center.lng],\n      radius: distance\n    })\n\n    // then finally check the map is loaded and add each point to the map\n    this.map.on('load', ()=> {\n      query.on(\"key_entered\", (key, location, distance, customData)=>{\n        // TODO: bug where source exist and crashes need to check if getSource and getLayer exist individually (same as line 111)\n        if(this.map.getSource(key) && this.map.getLayer(key)) return;\n        this.map.addSource(key, {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"FeatureCollection\",\n            \"features\": [{\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [location[1], location[0]]\n              }\n            }]\n          }\n        });\n\n        this.map.addLayer(getNewLayer(key, customData.color));\n\n        // ummm the only thing changing should be the color if not then later add error checking\n        firebaseRef.child(key).on('child_changed', (a)=>{\n          this.map.removeLayer(key);\n          this.map.addLayer(getNewLayer(key, a.val()));\n        });\n      });\n\n      // update query to new location\n      this.map.on('moveend', ()=>{\n        center = this.map.getCenter();\n        corner = this.map.getBounds()._ne;\n        distance = GeoFire.distance([center.lat, center.lng], [corner.lat, corner.lng]);\n        query.updateCriteria({\n          center: [center.lat, center.lng],\n          radius: distance\n        });\n      });\n\n      query.on('key_exited', (key, location, distance, customData)=>{\n        // TODO: check the logic before returning\n        if(!this.map.getSource(key) && !this.map.getLayer(key)) return;\n        this.map.removeLayer(key);\n        this.map.removeSource(key);\n        firebaseRef.child(key).off('child_changed')\n      });\n\n    });\n  }\n\n  render() {\n    const style = {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      width: '100%'\n    };\n    this.makePoints(this.props.firebaseRef, this.props.geoFireRef, this.props.GeoFire);\n    return <div style={style} ref={el => this.mapContainer = el} />;\n  }\n}\n","import firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyCWMqf2pmYbLYpYu1eohHRs7GueK5jsKcQ\",\n    authDomain: \"color-map1.firebaseapp.com\",\n    databaseURL: \"https://color-map1.firebaseio.com\",\n    projectId: \"color-map1\",\n    storageBucket: \"color-map1.appspot.com\",\n    messagingSenderId: \"129169085202\"\n  };\n\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { Component } from 'react';\nimport Button from './Components/Button';\nimport Footer from './Components/Footer';\nimport Form from './Components/Form';\nimport Mapbox from './Components/Mapbox';\nimport './Styles/App.css';\nimport firebase from './firebase.js';\n// https://github.com/arnetuk/geofire-js this geofire has support for extra data set (on the package.json i am using my fork cause this one was missing customdata return on event 'key_entered')\nimport GeoFire from 'geofire';\n\nconst firebaseRef = firebase.database().ref('points');\nconst geoFireRef = new GeoFire(firebaseRef);\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      formActive: false,\n      disableGeolocation: false,\n      firebaseRef: null,\n      geoFire: null,\n      GeoFire: GeoFire,\n    }\n    this.toggleForm = this.toggleForm.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({\n      firebaseRef: firebaseRef,\n      geoFireRef: geoFireRef,\n      hasGeolocation: (\"geolocation\" in navigator),\n    });\n\n  }\n\n  toggleForm(value){\n    let formActive = value ? value : !this.state.formActive;\n    this.setState({formActive: value})\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Mapbox\n          GeoFire={this.state.GeoFire}\n          firebaseRef={this.state.firebaseRef}\n          geoFireRef={this.state.geoFireRef} />\n        <Button\n          className={'form-btn'}\n          onClick={this.toggleForm}\n          color={'#7b7b7b'}\n          hoverColor={'rgb(93, 93, 93)'}\n          text={'New Point'}/>\n        <Footer/>\n        <Form\n          geoFireRef={this.state.geoFireRef}\n          firebaseRef={this.state.firebaseRef}\n          closeForm={()=>{this.toggleForm(false)}}\n          isActive={this.state.formActive}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}